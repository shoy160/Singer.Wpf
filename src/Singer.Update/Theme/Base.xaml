<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:s="clr-namespace:System;assembly=mscorlib">
    <Color x:Key="C-Font">#333333</Color>
    <Color x:Key="C-Primary">#5278EB</Color>
    <Color x:Key="C-ProcessBg">#D4DFFF</Color>
    <Color x:Key="C-Background">White</Color>
    <s:Double x:Key="FontSize">14</s:Double>

    <SolidColorBrush x:Key="C-ForegroundBrush" Color="{StaticResource C-Font}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-BackgroundBrush" Color="{StaticResource C-Background}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-BorderBrush" Color="{StaticResource C-Primary}"></SolidColorBrush>
    <SolidColorBrush x:Key="C-PrimaryBrush" Color="{StaticResource C-Primary}"></SolidColorBrush>
    <SolidColorBrush x:Key="ProcessBgBrush" Color="{StaticResource C-ProcessBg}"></SolidColorBrush>
    <SolidColorBrush x:Key="SecondFontBrush" Color="#FF666666" />
    <SolidColorBrush x:Key="TipFontBrush" Color="#FF999999" />

    <!--window-->
    <Style TargetType="{x:Type Window}" BasedOn="{x:Null}">
        <Setter Property="MinWidth" Value="200"></Setter>
        <Setter Property="WindowStyle" Value="None"></Setter>
        <Setter Property="AllowsTransparency" Value="True"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Margin" Value="5"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"  
                            BorderThickness="{TemplateBinding BorderThickness}"  
                            Margin="{TemplateBinding Margin}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  
                            CornerRadius="5">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="{TemplateBinding Margin}" ShadowDepth="0"/>
                        </Border.Effect>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" Height="55" x:Name="PART_Header">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="0" Grid.ColumnSpan="2" Height="55" BorderThickness="0,0,0,1" BorderBrush="#FFE4E6EE" VerticalAlignment="Center" />
                                <Grid Grid.Column="0" Height="55" Margin="15,0,0,0">
                                    <TextBlock VerticalAlignment="Center" Text="{TemplateBinding Title}" FontSize="16" Foreground="{StaticResource C-ForegroundBrush}"></TextBlock>
                                </Grid>
                                <WrapPanel Grid.Column="1" Margin="5,1,10,1" x:Name="PART_Btns"></WrapPanel>
                            </Grid>
                            <AdornerDecorator Grid.Row="1">
                                <ContentPresenter Content="{TemplateBinding Content}" />
                            </AdornerDecorator>
                            <ResizeGrip Grid.Row="1" x:Name="WindowResizeGrip" HorizontalAlignment="Right" VerticalAlignment="Bottom" IsTabStop="false" Visibility="Collapsed"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                                <Condition Property="WindowState" Value="Normal"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ProcessBorder" TargetType="Border">
        <Setter Property="Height" Value="48"></Setter>
        <Setter Property="Width" Value="774"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="CornerRadius" Value="3"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource C-PrimaryBrush}"></Setter>
        <Setter Property="Background" Value="{StaticResource ProcessBgBrush}"></Setter>
    </Style>
    <Style TargetType="Button" x:Key="Btn-Base" BasedOn="{x:Null}">
        <Setter Property="Background" Value="{DynamicResource C-BackgroundBrush}"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource C-BorderBrush}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource C-PrimaryBrush}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="Height" Value="36"></Setter>
        <Setter Property="Width" Value="92"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="FontSize" Value="13"></Setter>
        <Setter Property="FontWeight" Value="Medium"></Setter>
        <Setter Property="FontStretch" Value="Medium"></Setter>
    </Style>
    <Style TargetType="Button" x:Key="Btn-Default" BasedOn="{StaticResource Btn-Base}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <!-- 我们将 Grid 用作根，原因在于这便于添加更多的元素来自定义按钮 -->
                    <Grid x:Name="Grid">
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="3"
                                Background="{DynamicResource C-BackgroundBrush}" BorderBrush="{DynamicResource C-BorderBrush}" SnapsToDevicePixels="True"/>

                        <!-- Content Presenter 是控件放置文本内容等项之处 -->
                        <!-- 通过利用绑定，无需编辑模板即可将控件参数化 -->
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" OpacityMask="White"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource C-BackgroundHoverBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource C-BorderHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.45"></Setter>
                            <Setter Property="Cursor" Value="No"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="Btn-Primary" BasedOn="{StaticResource Btn-Base}">
        <Setter Property="Foreground" Value="{DynamicResource C-BackgroundBrush}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <!-- 我们将 Grid 用作根，原因在于这便于添加更多的元素来自定义按钮 -->
                    <Grid x:Name="Grid">
                        <Border x:Name="Border" BorderThickness="0" Padding="{TemplateBinding Padding}" Background="{DynamicResource C-PrimaryBrush}" CornerRadius="3"/>
                        <!-- Content Presenter 是控件放置文本内容等项之处 -->
                        <!-- 通过利用绑定，无需编辑模板即可将控件参数化 -->
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" OpacityMask="White"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource C-PrimaryHoverBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource C-PrimaryBorderHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.45"></Setter>
                            <Setter Property="Cursor" Value="No"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--滚动条-->
    <s:Double x:Key="ScrollBarSize">12</s:Double>
    <!--滚动两边按钮样式-->
    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="Transparent"></Setter>
    </Style>

    <!--滚动条滑块两边按钮样式-->
    <Style x:Key="ScrollBarTrackButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent"></Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--滚动条滑块样式-->
    <ControlTemplate x:Key="ThumbTemplate" TargetType="Thumb">
        <Grid>
            <Border  x:Name="PART_Bg" CornerRadius="4" Margin="2" SnapsToDevicePixels="True" Background="{StaticResource ProcessBgBrush}">
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource C-PrimaryBrush}" TargetName="PART_Bg"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" TargetName="PART_Bg"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--水平滚滚动条模板-->
    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid x:Name="HorizontalRoot" Height="{TemplateBinding Height}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <!--内部背景-->
            <Border x:Name="BgInner" Grid.Column="1" Margin="0" SnapsToDevicePixels="True" Opacity="0.3"  CornerRadius="6" Background="{StaticResource ProcessBgBrush}"/>
            <!--左按钮-->
            <!--
            <Border Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center">
                <RepeatButton  k:AttachProperty.FontIcon="&#xe679;"  Style="{StaticResource ScrollBarButton}" x:Name="HorizontalSmallDecrease"
                               IsTabStop="False" Interval="50" Margin="0,1,0,0" Command="ScrollBar.LineLeftCommand"/>
            </Border>-->
            <!--中间滑动区域-->
            <Track x:Name="PART_Track" IsDirectionReversed="False" Grid.Column="1">
                <!--左滑块-->
                <Track.DecreaseRepeatButton>
                    <RepeatButton x:Name="HorizontalLargeDecrease" Command="ScrollBar.PageLeftCommand"
                                  IsTabStop="False" Interval="50" Style="{DynamicResource ScrollBarTrackButton}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Template="{StaticResource ThumbTemplate}" />
                </Track.Thumb>
                <!--右滑块-->
                <Track.IncreaseRepeatButton>
                    <RepeatButton x:Name="HorizontalLargeIncrease" Command="ScrollBar.PageRightCommand"
                                  IsTabStop="False"  Interval="50" Style="{DynamicResource ScrollBarTrackButton}" />
                </Track.IncreaseRepeatButton>
            </Track>
            <!--右按钮-->
            <!--
            <Border Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center">
                <RepeatButton k:AttachProperty.FontIcon="&#xe6a3;"  Style="{StaticResource ScrollBarButton}"
                              IsTabStop="False" Interval="50" Margin="0,1,0,0" Command="ScrollBar.LineRightCommand"/>
            </Border>-->
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="BgInner" Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--垂直滚滚动条模板-->
    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid x:Name="VerticalRoot" Height="{TemplateBinding Height}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <!--内部背景-->
            <Border x:Name="BgInner" Grid.Row="1" Margin="0" CornerRadius="6" SnapsToDevicePixels ="True" Opacity="0.3"  Background="{StaticResource ProcessBgBrush}"/>
            <!--上按钮-->
            <!--
            <Border Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="VerticalSmallDecrease">
                <RepeatButton k:AttachProperty.FontIcon="&#xe6de;"  Style="{StaticResource ScrollBarButton}"
                              IsTabStop="False" Interval="50" Margin="0" Command="ScrollBar.LineUpCommand"/>
            </Border>-->
            <!--中间滑动区域-->
            <Track x:Name="PART_Track" IsDirectionReversed="true" Grid.Row="1">
                <!--上滑块-->
                <Track.DecreaseRepeatButton>
                    <RepeatButton x:Name="HorizontalLargeDecrease" Command="ScrollBar.PageUpCommand" 
                                  IsTabStop="False" Interval="50" Style="{DynamicResource ScrollBarTrackButton}" />
                </Track.DecreaseRepeatButton>
                <!--中间滑块-->
                <Track.Thumb>
                    <Thumb Template="{StaticResource ThumbTemplate}" MinHeight="10"/>
                </Track.Thumb>
                <!--下滑块-->
                <Track.IncreaseRepeatButton>
                    <RepeatButton x:Name="HorizontalLargeIncrease" Command="ScrollBar.PageDownCommand"
                                  IsTabStop="False" Interval="50" Style="{DynamicResource ScrollBarTrackButton}" />
                </Track.IncreaseRepeatButton>
            </Track>
            <!--下按钮-->
            <!--
            <Border Grid.Row="2" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="VerticalSmallIncrease">
                <RepeatButton k:AttachProperty.FontIcon="&#xe661;"  Style="{StaticResource ScrollBarButton}"
                              IsTabStop="False" Interval="50" Margin="0" Command="ScrollBar.LineDownCommand"/>
            </Border>-->
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="BgInner" Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--ScrollBar样式-->
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                <Setter Property="Height" Value="{StaticResource ScrollBarSize}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                <Setter Property="Width" Value="{StaticResource ScrollBarSize}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--ScrollViewer样式-->
    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" x:Name="leftColumn" />
                            <ColumnDefinition Width="Auto" x:Name="rightColumn" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}"
                                                CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}"
                                                Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"
                                                Grid.Row="0" Grid.Column="0" />
                        <!--垂直滚动条 -->
                        <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}"
                                   Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <!--水平底部滚动条-->
                        <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar"
                                   Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}"
                                   Minimum="0" Orientation="Horizontal" Grid.Row="1"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportWidth}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>